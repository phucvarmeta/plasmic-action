import { GeneratorOptions } from "@babel/generator";
import * as parser from "@babel/parser";
import { Node } from "@babel/traverse";
import { JSXAttribute, JSXElement, JSXSpreadAttribute } from "@babel/types";
export declare const code: (n: Node | undefined, opts?: GeneratorOptions | undefined, unformatted?: boolean | undefined) => string;
export declare const formatted: (c: string) => string;
export declare function parseExpr(input: string): parser.ParseResult<import("@babel/types").Expression>;
export declare const compactCode: (n: Node) => string;
export declare const nodesDeepEqualIgnoreComments: (n1: Node, n2: Node) => boolean;
export declare const tagName: (jsxElement: JSXElement) => string;
export declare const getAttrName: (attr: JSXAttribute) => string;
export declare const isAttribute: (attr: JSXAttribute | JSXSpreadAttribute, expectedName: string) => boolean;
